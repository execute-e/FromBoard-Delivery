@use 'helpers' as *;

html {
    &.is-lock {
        overflow: hidden;
        
        body {
            background-color: var(--color-dark-10);
        }
    }
}

body {
    @include fluid-text(18, 24);

    display: flex;
    flex-direction: column;
    font-family: var(--font-family-base);
    letter-spacing: -0.03em;
    color: var(--color-dark);
    background-color: var(--background-color);
}

main {
    flex-grow: 1;
}

h1, .h1,
h2, .h2,
h3, .h3,
h4, .h4,
h5, .h5,
h6, .h6 {
    color: var(--color-dark);
}

h1, .h1,
h2, .h2,
h3, .h3,
h4, .h4 {
    font-weight: 900;
}

h5, .h5,
h6, .h6 {
    font-weight: 700;
}

h1, .h1 {
    @include fluid-text(36, 30);

    line-height: 1.1;
}

h2, .h2 {
    font-size: rem(30);

    line-height: 1.3;
}

h3, .h3 {
    @include fluid-text(32, 20);
}

h4, .h4 {
    font-size: rem(18);
}

h5, .h5 {
    @include fluid-text(24, 18);
}

h6, .h6 {
    @include fluid-text(20, 16);
}

a,
button,
label,
input,
textarea,
select,
svg * {
    transition-duration: var(--transition-duration);
}

a {
    color: inherit;

    @include hover {
        color: var(--color-accent);
    }

    &[class] {
        text-decoration: none;
    }
}

:focus-visible {
    outline: rem(2) dashed var(--color-accent);
    outline-offset: rem(4);
    transition-duration: 0s !important;
}

a {
    font-size: rem(16);
}

body {
  &.is-lock {
    overflow: hidden;
    position: fixed;
    width: 100%;
    height: 100%;
  }
}

input {
    font-size: rem(16);
    padding: rem(12);
    border-radius: rem(4);
    background-color: transparent;
    border: rem(2) solid var(--color-dark);

    @include mobile-l {
        width: rem(280);
    }

    @include mobile-m {
        width: rem(180);
    }

    @include mobile-s {
        width: rem(150);
    }
}